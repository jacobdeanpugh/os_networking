import logging
import os
import sys
from malware_detector.config import config

def get_log_file_path():
    """Determine the correct log file path depending on the OS."""
    log_dir = None
    if sys.platform.startswith("linux") or sys.platform == "darwin":  # macOS/Linux
        log_dir = os.path.expanduser("~/.local/share/malware_detector")
    elif sys.platform == "win32":  # Windows
        log_dir = os.path.join(os.getenv("APPDATA"), "malware_detector")
    else:
        log_dir = os.path.expanduser("~/.malware_detector")  # Fallback

    # Ensure the log directory exists
    os.makedirs(log_dir, exist_ok=True)

    return os.path.join(log_dir, "malware_detector.log")

# Get Log Settings
log_file = get_log_file_path()
log_level = config["logger"]["log_level"]
log_format = config["logger"]["log_format"]
console_log_level = config["logger"]["console_level"]

# Ensure log directory exists
log_dir = os.path.dirname(log_file)
if log_dir and not os.path.exists(log_dir):
    os.makedirs(log_dir)

# Set up logging
logging.basicConfig(
    filename=log_file,
    level = getattr(logging, log_level.upper(), logging.INFO),
    format=log_format,
    datefmt="%Y-%m-%d %H:%M:%S"
)

# Create instance
logger = logging.getLogger("malware_detector")

# Log errors to the console
console_handler = logging.StreamHandler()
console_handler.setLevel(getattr(logging, console_log_level.upper(), logging.INFO))
console_handler.setFormatter(logging.Formatter(log_format))
logger.addHandler(console_handler)


