from .signatures import Signature_Manager
from .config import config
import argparse

def get_args():
    parser = argparse.ArgumentParser(description='Malware Detector')
    subparsers = parser.add_subparsers(dest='command', help='Sub-commands')

    # Update command
    subparsers.add_parser('update', help='Update signatures')

    # Scan command
    scan_parser = subparsers.add_parser('scan', help='Scan directory')
    scan_parser.add_argument('--file', help='File to scan')
    scan_parser.add_argument('--directory', help='Directory to scan')
    scan_parser.add_argument('--recursive', action='store_true', help='Scan directory recursively')
    scan_parser.add_argument('--zip', help='Scan zip files')
    scan_parser.add_argument('--password', help='Password for encrypted zip files')

    return parser.parse_args()

def handle_update(signature_manager):

    signature_manager.initialize_local_db()

def handle_file_scan(signature_manager, file):
    result = signature_manager.is_file_signature_malware(file)
    if result:
        print(f'Malware detected in {file}')
    else:
        print(f'No malware detected in {file}')

def handle_directory_scan(signature_manager, directory, recursive):
    depth = -1 if recursive else 0
    print(f'Scanning directory {directory}')
    results = signature_manager.recursively_scan_directory(directory, depth=depth)
    count = list(results.values()).count(True)
    print(f'Malware detected in {count} files')
    for file, result in results.items():
        if result:
            print(f'Malware detected in {file}')

def handle_zip_scan(signature_manager, zip_file, password):
    print(f'Scanning zip file {zip_file}')
    try:
        results = signature_manager.scan_zip(zip_file, password=password)
    except Exception as e:
        return
    count = list(results.values()).count(True)
    print(f'Malware detected in {count} files')
    for file, result in results.items():
        if result:
            print(f'Malware detected in {file}')

def main():
    args = get_args()
    signature_manager = Signature_Manager()

    if args.command == 'update':
        handle_update(signature_manager)
    elif args.command == 'scan':
        if args.file:
            handle_file_scan(signature_manager, args.file)
        elif args.directory:
            handle_directory_scan(signature_manager, args.directory, args.recursive)
        elif args.zip:
            handle_zip_scan(signature_manager, args.zip, args.password)
        else:
            print('No file or directory specified')
    else:
        print('No command specified')

if __name__ == '__main__':
    main()
